<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Snap of Website || Mobile || Desktop</title>
  <meta name="description"
    content="Take snap of website.Put the URL and get image how website look on mobile and desktop">
  <meta property="og:url" content="https://ytlisten.herokuapp.com/" />
  <meta property="og:type" content="website" />
  <meta property="og:title" content="Snap of website in mobile and desktop " />
  <meta property="og:description"
    content="Take snap of website.Put the URL and get image how website look on mobile and desktop" />
  <meta name="twitter:card" content="Snap of Website" />
  <meta name="twitter:creator" content="@binamrax" />

  <style>
    body {
      font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
      background-color: #fff;
      font-size: 1rem;
      font-weight: 400;
      line-height: 1.5;
      color: #212529;
      margin: 0;
      padding: 0;
    }

    .top {
      min-height: 70px;
      position: fixed;
      background: rgb(124, 62, 182);
      right: 0;
      left: 0;
      top: 0;
    }

    .logo {
      text-align: center;
      color: rgb(238, 226, 226);
    }

    .form-details {
      margin-top: 80px;
      padding: 20px;
      text-align: center;
      margin-right: 20px;
    }

    .from-collections {
      padding: 10px;
    }

    .form-details input {
      width: 100%;
      padding: .375rem .75rem;
      font-size: 1rem;
      font-weight: 400;
      line-height: 1.5;
      color: #495057;
      background-color: #fff;
      background-clip: padding-box;
      border: 1px solid #ced4da;
      -webkit-appearance: none;
      -moz-appearance: none;
      appearance: none;
      border-radius: .25rem;
      transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out;
    }

    .form-details button {
      margin: 10px;
      padding: 15px 20px;
      font-size: 20px;
      font-weight: 400;
      line-height: 1.4;
      text-align: center;
      white-space: nowrap;
      vertical-align: middle;
      -ms-touch-action: manipulation;
      touch-action: manipulation;
      cursor: pointer;
      -webkit-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none;
      background-image: none;
      border: 1px solid transparent;
      border-radius: 4px;
      color: #fff;
      background: linear-gradient(0deg, #1003c0, #5466a0);
      box-shadow: inset 0 0 0 1px #fff;
      min-width: 150px;

    }

    .form-details button:hover {
      background: linear-gradient(0deg, #c0bfc5, #0236e2);
    }

    .bug {
      color: red;
      font-weight: bold;
    }

    .from-collections img {
      width: 100%;
    }

    .desktop img,
    .mobile img {
      box-sizing: border-box;
      border: solid #7c3eb6;
    }

    .desktop,
    .mobile {
      margin-block: 30px;
    }

    @media only screen and (min-width: 768px) {
      .desktop {
        width: 70%;
      }

      .desktop,
      .mobile {
        float: left;
      }

      .mobile {
        width: 30%
      }

      .desktop .img {
        margin-right: 20px;
      }
    }

    .loader,
    .loader:before,
    .loader:after {
      background: #3522dd;
      -webkit-animation: load1 1s infinite ease-in-out;
      animation: load1 1s infinite ease-in-out;
      width: 1em;
      height: 4em;
    }

    .loader {
      color: #3522dd;
      text-indent: -9999em;
      margin: 88px auto;
      position: relative;
      font-size: 11px;
      -webkit-transform: translateZ(0);
      -ms-transform: translateZ(0);
      transform: translateZ(0);
      -webkit-animation-delay: -0.16s;
      animation-delay: -0.16s;
    }

    .loader:before,
    .loader:after {
      position: absolute;
      top: 0;
      content: '';
    }

    .loader:before {
      left: -1.5em;
      -webkit-animation-delay: -0.32s;
      animation-delay: -0.32s;
    }

    .loader:after {
      left: 1.5em;
    }

    @-webkit-keyframes load1 {

      0%,
      80%,
      100% {
        box-shadow: 0 0;
        height: 4em;
      }

      40% {
        box-shadow: 0 -2em;
        height: 5em;
      }
    }

    @keyframes load1 {

      0%,
      80%,
      100% {
        box-shadow: 0 0;
        height: 4em;
      }

      40% {
        box-shadow: 0 -2em;
        height: 5em;
      }
    }

    .hide {
      display: none !important;
    }
  </style>
</head>

<body>
  <div class="wrapper">
    <header>
      <div class="top">
        <div class="logo">
          <h1>Snap of website </h1>
        </div>
      </div>
    </header>
    <div class="form-details">
      <div class="from-collections">
        <label style="font-size: 20px;font-weight: bold;">Place Link below</label>
        <input type="text" id="webUrl" autofocus placeholder="Paste link of website here. " />
        <br>
        <button id="snap">Snap</button>
        <div id="bug" class="bug"></div>
        <div class="desktop">
          <div id="loadingdesk" class="loader hide">Loading...</div>
          <div class="img hide" id="desktop"></div>
        </div>
        <div class="mobile">
          <div id="loadingmob" class="loader hide">Loading...</div>
          <div class="img hide" id="mobile"></div>
        </div>
      </div>
    </div>
  </div>
  <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
  <script>
    (function () {
      const input=document.getElementById('webUrl');
      input.addEventListener("keyup", function (event) {
        // Number 13 is the "Enter" key on the keyboard
        if (event.keyCode === 13) {
          event.preventDefault();
          document.getElementById("snap").click();
        }
      })
      document.getElementById("snap").addEventListener('click', () => {
        let bug = document.getElementById('bug');
        let loadingdesk = document.getElementById('loadingdesk');
        let loadingmob = document.getElementById('loadingmob');
        let desktop = document.getElementById('desktop');
        let mobile = document.getElementById('mobile');
        let url = input.value;
        desktop.classList.add('hide');
        mobile.classList.add('hide');
        desktop.innerHTML = '';
        mobile.innerHTML = '';
        bug.innerText = '';
        if (validURL(url)) {
          axios.get('/checkurl?url=' + url).then(r => {
            if (r.data && r.data.result) {
              loadingdesk.classList.remove('hide');
              loadingmob.classList.remove('hide');
              axios.get('/desktop?url=' + url, { responseType: 'arraybuffer' }).then(a => {
                desktop.innerHTML = '<h3>Desktop</h3><img src="' + imageEncode(a.data) + '" alt="desktop">';
                desktop.classList.remove('hide');
                loadingdesk.classList.add('hide');
              }).catch(e => { loadingdesk.classList.add('hide'); });
              axios.get('/mobile?url=' + url, { responseType: 'arraybuffer' }).then(a => {
                mobile.innerHTML = '<h3>Mobile</h3><img src="' + imageEncode(a.data) + '" alt="desktop">';
                mobile.classList.remove('hide');
                loadingmob.classList.add('hide');
              }).catch(e => { loadingmob.classList.add('hide'); });
            }
          }).catch(e => { })
        } else {
          bug.innerText = "Invalid Url. Please put full url"
        }

      });
      function validURL(str) {
        var pattern = new RegExp('^(https?:\\/\\/)?' + // protocol
          '((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|' + // domain name
          '((\\d{1,3}\\.){3}\\d{1,3}))' + // OR ip (v4) address
          '(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*' + // port and path
          '(\\?[;&a-z\\d%_.~+=-]*)?' + // query string
          '(\\#[-a-z\\d_]*)?$', 'i'); // fragment locator
        return !!pattern.test(str);
      }
      function imageEncode(arrayBuffer) {
        let u8 = new Uint8Array(arrayBuffer)
        let b64encoded = btoa([].reduce.call(new Uint8Array(arrayBuffer), function (p, c) { return p + String.fromCharCode(c) }, ''))
        let mimetype = "image/jpeg"
        return "data:" + mimetype + ";base64," + b64encoded
      }

    })();
  </script>
</body>

</html>